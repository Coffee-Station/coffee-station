buildscript {
	ext {
		queryDslVersion = "4.4.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	// querydsl
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//
//	// H2 Database
//	runtimeOnly 'com.h2database:h2'
	// MySQL Database
	runtimeOnly 'mysql:mysql-connector-java'
	//spatial query
	implementation 'org.hibernate:hibernate-spatial'
//	compile group: 'org.hibernate', name: 'hibernate-spatial', version: '5.4.4.Final'
//	implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.16.1'
//	implementation group: 'org.locationtech.jts.io', name: 'jts-io-common', version: '1.18.2'

	// Redis
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// AWS  : https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-aws
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// JPA Hibernate
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// java-jwt : https://github.com/auth0/java-jwt
	implementation 'com.auth0:java-jwt:3.18.2'
	// OAuth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//firebase
	implementation 'com.google.firebase:firebase-admin:6.8.1'
	// okhttp
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
	// swagger
//	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// Dev Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// p6spy : https://github.com/gavlyukovskiy/spring-boot-data-source-decorator
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// JsonObject 사용
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

	//Tymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	// s3
	implementation('org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE')

	//javax
	implementation("javax.annotation:javax.annotation-api:1.3.2")
	annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")

	// querydsl
	implementation 'com.querydsl:querydsl-jpa'
//	implementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
//	annotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
//	testImplementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
//	testAnnotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")


}

test {
	useJUnitPlatform()
}

// querydsl

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

